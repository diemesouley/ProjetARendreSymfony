<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'matriculeUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'emailUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adresseUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'telephoneUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'statusUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'Partenaire', '' . "\0" . 'App\\Entity\\User' . "\0" . 'ComptePartenaire', '' . "\0" . 'App\\Entity\\User' . "\0" . 'depots', '' . "\0" . 'App\\Entity\\User' . "\0" . 'transaction', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'username', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'matriculeUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'prenomUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'emailUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'adresseUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'telephoneUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'statusUser', '' . "\0" . 'App\\Entity\\User' . "\0" . 'Partenaire', '' . "\0" . 'App\\Entity\\User' . "\0" . 'ComptePartenaire', '' . "\0" . 'App\\Entity\\User' . "\0" . 'depots', '' . "\0" . 'App\\Entity\\User' . "\0" . 'transaction', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\User' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\User' . "\0" . 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getMatriculeUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatriculeUser', []);

        return parent::getMatriculeUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatriculeUser(string $matriculeUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatriculeUser', [$matriculeUser]);

        return parent::setMatriculeUser($matriculeUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomUser', []);

        return parent::getNomUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomUser(string $nomUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomUser', [$nomUser]);

        return parent::setNomUser($nomUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenomUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenomUser', []);

        return parent::getPrenomUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenomUser(string $prenomUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenomUser', [$prenomUser]);

        return parent::setPrenomUser($prenomUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailUser', []);

        return parent::getEmailUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailUser(string $emailUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailUser', [$emailUser]);

        return parent::setEmailUser($emailUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseUser', []);

        return parent::getAdresseUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseUser(string $adresseUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseUser', [$adresseUser]);

        return parent::setAdresseUser($adresseUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephoneUser(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephoneUser', []);

        return parent::getTelephoneUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephoneUser(int $telephoneUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephoneUser', [$telephoneUser]);

        return parent::setTelephoneUser($telephoneUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusUser(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusUser', []);

        return parent::getStatusUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusUser(string $statusUser): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusUser', [$statusUser]);

        return parent::setStatusUser($statusUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartenaire(): ?\App\Entity\Partenaire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartenaire', []);

        return parent::getPartenaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartenaire(?\App\Entity\Partenaire $Partenaire): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartenaire', [$Partenaire]);

        return parent::setPartenaire($Partenaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getComptePartenaire(): ?\App\Entity\ComptePartenaire
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComptePartenaire', []);

        return parent::getComptePartenaire();
    }

    /**
     * {@inheritDoc}
     */
    public function setComptePartenaire(?\App\Entity\ComptePartenaire $ComptePartenaire): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComptePartenaire', [$ComptePartenaire]);

        return parent::setComptePartenaire($ComptePartenaire);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransaction(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransaction', []);

        return parent::getTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function addTransaction(\App\Entity\Transaction $transaction): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTransaction', [$transaction]);

        return parent::addTransaction($transaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTransaction(\App\Entity\Transaction $transaction): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTransaction', [$transaction]);

        return parent::removeTransaction($transaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepots(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepots', []);

        return parent::getDepots();
    }

    /**
     * {@inheritDoc}
     */
    public function addDepot(\App\Entity\Depot $depot): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDepot', [$depot]);

        return parent::addDepot($depot);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDepot(\App\Entity\Depot $depot): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDepot', [$depot]);

        return parent::removeDepot($depot);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile(\Symfony\Component\HttpFoundation\File\File $imageFile = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$imageFile]);

        parent::setImageFile($imageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageName(?string $imageName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageName', [$imageName]);

        parent::setImageName($imageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageName', []);

        return parent::getImageName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

}
